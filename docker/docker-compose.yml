version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/Dockerfile.frontend
    ports:
      - "3000:3000"
    env_file:
      - env.local
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_AI_SERVER_URL=${REACT_APP_AI_SERVER_URL}
    depends_on:
      - backend
    volumes:
      - ../frontend:/app
      - /app/node_modules

  # Backend Service
  backend:
    build:
      context: ../backend
      dockerfile: ../docker/Dockerfile.backend
    ports:
      - "3001:3001"
    env_file:
      - env.local
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - AI_SERVER_URL=${AI_SERVER_URL}
    command: [ "npm", "start" ]
    volumes:
      - ../backend:/app
      - /app/node_modules
      - ../backend/uploads:/app/uploads
    depends_on:
      - ai-server
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # AI Server Service
  ai-server:
    build:
      context: ../ai-server
      dockerfile: ../docker/Dockerfile.ai
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - HOST=0.0.0.0
    volumes:
      - ../ai-server:/app
      - ../data:/app/data
    deploy:
      resources:
        limits:
          memory: 12G
        reservations:
          memory: 6G

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
      - ai-server 