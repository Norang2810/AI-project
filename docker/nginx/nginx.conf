# 메인 설정로 마운트할 때는 events/http 포함
events {
  worker_connections 1024;
}

http {
  client_max_body_size 20m;

  upstream frontend {
    server frontend:80;     # compose 서비스명과 일치
  }

  upstream backend {
    server backend:3001;    # compose 서비스명과 일치
  }

  upstream ai_server {
    server ai-server:8000;  # upstream 이름은 언더스코어 권장(하이픈 피함)
  }

  server {
    listen 80;
    server_name _;

    # 프론트 프록시 (SPA면 프론트 컨테이너 내부 Nginx에서 fallback 처리)
    location / {
      proxy_pass http://frontend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 백엔드 API (/api 접두사 유지)
    location /api/ {
      proxy_pass http://backend;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # AI 서버
    location /ai/ {
      proxy_pass http://ai_server;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 정적 캐시 헤더
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
      expires 1y;
      add_header Cache-Control "public, immutable";
    }
  }
}
