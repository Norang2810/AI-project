events {
    worker_connections 1024;
}

http {
    # 업로드/응답 용량 및 타임아웃 상향
    client_max_body_size 20m;
    send_timeout 600s;
    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
    proxy_connect_timeout 60s;

    upstream frontend {
        server frontend:80;
    }
    upstream backend {
        server backend:3001;
    }
    upstream ai-server {
        server ai-server:8000;
    }

    # 로컬 개발 환경용 (HTTP)
    server {
        listen 80;
        server_name localhost;

        client_max_body_size 20m;

        # API 요청 → backend
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
        }

        # AI 요청 → ai-server
        location /ai/ {
            proxy_pass http://ai-server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
        }

        # 프론트엔드 정적 파일
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
        }
    }

    # 배포 환경 (HTTPS)
    server {
        listen 443 ssl http2;
        server_name aljualju.duckdns.org;

        # SSL 인증서 (Let's Encrypt 발급 후 적용)
        ssl_certificate /etc/letsencrypt/live/aljualju.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/aljualju.duckdns.org/privkey.pem;

        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        client_max_body_size 20m;

        # API 요청 → backend
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
        }

        # AI 요청 → ai-server
        location /ai/ {
            proxy_pass http://ai-server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
        }

        # 프론트엔드 정적 파일
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
        }
    }

    # 배포 환경 - HTTP → HTTPS 리다이렉트
    server {
        listen 80;
        server_name aljualju.duckdns.org;

        location / {
            return 301 https://$server_name$request_uri;
        }
    }
}
